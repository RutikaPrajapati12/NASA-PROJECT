{"ast":null,"code":"const API_URL = \"http://localhost:8000\";\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchedLaunches = await response.json();\n  return fetchedLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(launch)\n    });\n  } catch (err) {\n    return {\n      ok: false\n    };\n  }\n}\nasync function httpAbortLaunch(id) {\n  return await fetch(`${API_URL}/launches/${id}`, {\n    method: \"delete\"\n  });\n}\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };","map":{"version":3,"names":["API_URL","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id"],"sources":["/Users/BigSur/Documents/NASA-PROJECT/client/src/hooks/requests.js"],"sourcesContent":["const API_URL=\"http://localhost:8000\";\nasync function httpGetPlanets() {\n  const response=await fetch(`${API_URL}/planets`)\n  return await response.json();\n  // Load planets and return as JSON.\n}\n\nasync function httpGetLaunches() {\n  const response=await fetch(`${API_URL}/launches`);\n  const fetchedLaunches=await response.json();\n  return fetchedLaunches.sort((a,b)=>{\n    return a.flightNumber-b.flightNumber;\n  });\n  // TODO: Once API is ready.\n  // Load launches, sort by flight number, and return as JSON.\n}\n\nasync function httpSubmitLaunch(launch) {\n  try{\n    return await fetch(`${API_URL}/launches`,{\n      method:\"post\",\n      headers:{\n    \"Content-Type\":\"application/json\",\n      },\n      body:JSON.stringify(launch), \n    \n     })\n  }catch(err){\n    return{\n      ok:false,\n    };\n  }\n \n}\n\nasync function httpAbortLaunch(id) {\n  return await fetch(`${API_URL}/launches/${id}`,{\n    method:\"delete\",\n  })\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAC,uBAAuB;AACrC,eAAeC,cAAcA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEH,OAAQ,UAAS,CAAC;EAChD,OAAO,MAAME,QAAQ,CAACE,IAAI,EAAE;EAC5B;AACF;;AAEA,eAAeC,eAAeA,CAAA,EAAG;EAC/B,MAAMH,QAAQ,GAAC,MAAMC,KAAK,CAAE,GAAEH,OAAQ,WAAU,CAAC;EACjD,MAAMM,eAAe,GAAC,MAAMJ,QAAQ,CAACE,IAAI,EAAE;EAC3C,OAAOE,eAAe,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAG;IACjC,OAAOD,CAAC,CAACE,YAAY,GAACD,CAAC,CAACC,YAAY;EACtC,CAAC,CAAC;EACF;EACA;AACF;;AAEA,eAAeC,gBAAgBA,CAACC,MAAM,EAAE;EACtC,IAAG;IACD,OAAO,MAAMT,KAAK,CAAE,GAAEH,OAAQ,WAAU,EAAC;MACvCa,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACV,cAAc,EAAC;MACb,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACL,MAAM;IAE3B,CAAC,CAAC;EACL,CAAC,QAAMM,GAAG,EAAC;IACT,OAAM;MACJC,EAAE,EAAC;IACL,CAAC;EACH;AAEF;AAEA,eAAeC,eAAeA,CAACC,EAAE,EAAE;EACjC,OAAO,MAAMlB,KAAK,CAAE,GAAEH,OAAQ,aAAYqB,EAAG,EAAC,EAAC;IAC7CR,MAAM,EAAC;EACT,CAAC,CAAC;AACJ;AAEA,SACEZ,cAAc,EACdI,eAAe,EACfM,gBAAgB,EAChBS,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}